#include <iostream>
#include <vector>
#include <queue>

using namespace std;

vector<int> maxSlidingWindow(vector<int>& nums, int k) {
    vector<int> result;
    queue<int> q;
    for (int i = 0; i < nums.size(); i++) {
        // 如果队列不为空且窗口的最前面的元素等于当前队列的首元素，则将队列首元素出队
        if (!q.empty() && q.front() == i - k) {
            q.pop();
        }
        // 如果队列不为空且当前元素大于队列首元素，则将队列首元素出队
        while (!q.empty() && nums[i] >= nums[q.back()]) {
            q.pop();
        }
        // 将当前元素的索引入队
        q.push(i);
        // 如果窗口已经满了，则将窗口的最前面的元素添加到结果中
        if (i >= k - 1) {
            result.push_back(nums[q.front()]);
        }
    }
    return result;
}

int main() {
    vector<int> nums = {1, 3, -1, -3, 5, 3, 6, 7};
    int k = 3;
    vector<int> result = maxSlidingWindow(nums, k);
    for (int i = 0; i < result.size(); i++) {
        cout << result[i] << " ";
    }
    return 0;
}
